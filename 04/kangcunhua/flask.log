2016-06-01 19:50:17,105 - app - views.py- DEBUG - 访问首页
2016-06-01 19:54:35,909 - app - views.py- DEBUG - 访问首页
2016-06-01 20:19:58,910 - app - views.py- DEBUG - 访问首页
2016-06-01 20:32:12,401 - app - views.py- DEBUG - 用户请求的content-type为： , 不予处理
2016-06-01 21:03:58,718 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:07:55,683 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:11:23,415 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:12:48,596 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:17:13,684 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:17:33,771 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:17:44,843 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:18:01,753 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:19:51,960 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:21:05,223 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:21:29,237 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:22:14,404 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:23:45,954 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:23:57,608 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:26:30,473 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:28:05,912 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:28:05,919 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-01 21:28:42,910 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:28:42,916 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-01 21:29:53,899 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:29:53,908 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-01 21:37:56,801 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:37:56,810 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-01 21:46:59,502 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:46:59,509 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-01 21:47:34,490 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-01 21:47:34,498 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-02 10:53:50,192 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 10:53:50,222 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-02 11:10:53,177 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 11:10:53,182 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 14:39:31,462 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 14:39:31,564 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 14:40:23,055 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 14:40:23,056 - app - __init__.py- DEBUG - 初始化类：JsonRpc结束！
2016-06-02 14:40:23,065 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 14:53:15,993 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 14:53:15,994 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 14:53:15,998 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 14:53:16,087 - app - __init__.py- DEBUG - 验证是否需要登录，当前函数为：runAllValidata；
2016-06-02 14:53:16,094 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 15:04:37,700 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 15:04:37,701 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:04:37,735 - app - __init__.py- DEBUG - 验证模块idc是否存在，当前执行：runAllValidata函数
2016-06-02 15:04:37,738 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:04:37,742 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc，当前执行：runAllValidata函数
2016-06-02 15:04:37,744 - app - __init__.py- DEBUG - 验证Json的id要素，当前执行：runAllValidata函数
2016-06-02 15:04:37,748 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素，当前执行：runAllValidata函数
2016-06-02 15:04:37,752 - app - __init__.py- DEBUG - 验证是否需要登录，当前执行：runAllValidata函数
2016-06-02 15:04:37,756 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 15:23:57,564 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 15:23:57,565 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:23:57,594 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:23:57,594 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:23:57,599 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:23:57,599 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 15:23:57,599 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:23:57,599 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:23:57,599 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:23:57,604 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 15:25:44,151 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 15:25:44,151 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:25:44,178 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:25:44,179 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:25:44,185 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:25:44,185 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 15:25:44,185 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:25:44,185 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:25:44,185 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:25:44,190 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 15:26:18,782 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 15:26:18,783 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:26:18,816 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:26:18,817 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:26:18,821 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:26:18,822 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 15:26:18,822 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:26:18,822 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:26:18,822 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:26:18,827 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 15:34:21,609 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 15:34:21,610 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:34:21,610 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 15:34:21,610 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:34:21,640 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:34:21,640 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:34:21,644 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:34:21,645 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 15:34:21,645 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:34:21,645 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:34:21,645 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:34:21,649 - app - __init__.py- DEBUG - 通过函数execute组装调用成功返回的json信息;
2016-06-02 15:34:21,653 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 15:36:38,316 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 15:36:38,317 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:36:38,317 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 15:36:38,317 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:36:38,345 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:36:38,346 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:36:38,349 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:36:38,350 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 15:36:38,350 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:36:38,350 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:36:38,350 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:36:38,350 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-02 15:36:38,354 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 15:40:58,521 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 15:40:58,522 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:40:58,522 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 15:40:58,523 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:40:58,528 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:40:58,530 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:40:58,530 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:40:58,531 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 15:40:58,531 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:40:58,533 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:40:58,533 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:40:58,534 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-02 15:40:58,543 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-02 15:40:58,543 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:40:58,543 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 15:40:58,544 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:40:58,550 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:40:58,550 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:40:58,550 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:40:58,552 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-02 15:40:58,553 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc_err失败;
2016-06-02 15:40:58,553 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-02 15:40:58,553 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:40:58,554 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-02 15:40:58,554 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:40:58,557 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-02 15:40:58,557 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:40:58,558 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-02 15:40:58,559 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-02 15:40:58,565 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 15:42:19,497 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 15:42:19,498 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:42:19,498 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 15:42:19,498 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:42:19,501 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:42:19,501 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:42:19,502 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:42:19,502 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 15:42:19,502 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:42:19,504 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:42:19,505 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:42:19,505 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-02 15:42:19,510 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-02 15:42:19,511 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:42:19,511 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 15:42:19,512 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:42:19,515 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:42:19,515 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:42:19,515 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:42:19,515 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-02 15:42:19,516 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc_err失败;
2016-06-02 15:42:19,516 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-02 15:42:19,516 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:42:19,516 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-02 15:42:19,517 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:42:19,517 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-02 15:42:19,517 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:42:19,517 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-02 15:42:19,518 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-02 15:42:19,524 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 15:43:20,419 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 15:43:20,419 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:43:20,419 - app - __init__.py- DEBUG - ===初始化：Response_preform类====！
2016-06-02 15:43:20,420 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:43:20,456 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:43:20,457 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:43:20,462 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:43:20,462 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 15:43:20,462 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:43:20,462 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:43:20,463 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:43:20,463 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-02 15:43:20,470 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-02 15:43:20,470 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:43:20,471 - app - __init__.py- DEBUG - ===初始化：Response_preform类====！
2016-06-02 15:43:20,472 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:43:20,476 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:43:20,477 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:43:20,477 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:43:20,477 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-02 15:43:20,477 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc_err失败;
2016-06-02 15:43:20,478 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-02 15:43:20,478 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:43:20,478 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-02 15:43:20,479 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:43:20,479 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-02 15:43:20,479 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:43:20,482 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-02 15:43:20,482 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-02 15:43:20,488 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 15:44:21,510 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 15:44:21,510 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:44:21,513 - app - __init__.py- DEBUG - ===初始化：Response_preform类====！
2016-06-02 15:44:21,513 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:44:21,545 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:44:21,546 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:44:21,550 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:44:21,551 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 15:44:21,551 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:44:21,551 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:44:21,551 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:44:21,552 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-02 15:44:21,556 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-02 15:44:21,558 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:44:21,558 - app - __init__.py- DEBUG - ===初始化：Response_preform类====！
2016-06-02 15:44:21,558 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:44:21,561 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:44:21,561 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:44:21,561 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:44:21,561 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-02 15:44:21,562 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc_err失败;
2016-06-02 15:44:21,562 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-02 15:44:21,562 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:44:21,562 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-02 15:44:21,563 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:44:21,563 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-02 15:44:21,564 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:44:21,564 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-02 15:44:21,564 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-02 15:44:21,569 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 15:44:41,147 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 15:44:41,148 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:44:41,148 - app - __init__.py- DEBUG - ===初始化：Response_preform类====！
2016-06-02 15:44:41,148 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:44:41,178 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:44:41,179 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:44:41,183 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:44:41,184 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 15:44:41,184 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:44:41,184 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:44:41,184 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:44:41,184 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-02 15:44:41,189 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-02 15:44:41,189 - app - __init__.py- DEBUG - 初始化：JsonRpc类！
2016-06-02 15:44:41,190 - app - __init__.py- DEBUG - ===初始化：Response_preform类====！
2016-06-02 15:44:41,190 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:44:41,194 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:44:41,194 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:44:41,194 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:44:41,195 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-02 15:44:41,195 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc_err失败;
2016-06-02 15:44:41,195 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-02 15:44:41,195 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:44:41,196 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-02 15:44:41,196 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:44:41,196 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-02 15:44:41,196 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:44:41,197 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-02 15:44:41,198 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-02 15:44:41,203 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 15:46:54,659 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 15:46:54,659 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-02 15:46:54,659 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 15:46:54,660 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:46:54,697 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:46:54,698 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:46:54,703 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:46:54,703 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 15:46:54,703 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:46:54,703 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:46:54,703 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:46:54,704 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-02 15:46:54,710 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-02 15:46:54,710 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-02 15:46:54,711 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 15:46:54,711 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:46:54,715 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:46:54,716 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:46:54,716 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:46:54,716 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-02 15:46:54,717 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc_err失败;
2016-06-02 15:46:54,717 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-02 15:46:54,718 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:46:54,718 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-02 15:46:54,718 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:46:54,719 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-02 15:46:54,720 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:46:54,721 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-02 15:46:54,721 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-02 15:46:54,726 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 15:49:05,573 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 15:49:05,573 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-02 15:49:05,573 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 15:49:05,573 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:49:05,577 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:49:05,577 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:49:05,578 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:49:05,578 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 15:49:05,578 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:49:05,579 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:49:05,579 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:49:05,579 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-02 15:49:05,584 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-02 15:49:05,585 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-02 15:49:05,585 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 15:49:05,585 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:49:05,588 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:49:05,589 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:49:05,589 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:49:05,590 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-02 15:49:05,590 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc_err失败;
2016-06-02 15:49:05,590 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-02 15:49:05,590 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:49:05,590 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-02 15:49:05,591 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:49:05,591 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-02 15:49:05,591 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:49:05,591 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-02 15:49:05,591 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-02 15:49:05,602 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 15:50:09,842 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 15:50:09,843 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-02 15:50:09,843 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 15:50:09,843 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:50:09,846 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:50:09,846 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:50:09,847 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:50:09,847 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 15:50:09,848 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:50:09,848 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:50:09,848 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:50:09,848 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-02 15:50:09,852 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-02 15:50:09,852 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-02 15:50:09,853 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 15:50:09,853 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 15:50:09,858 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 15:50:09,858 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 15:50:09,858 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 15:50:09,858 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-02 15:50:09,858 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc_err失败;
2016-06-02 15:50:09,859 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-02 15:50:09,859 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 15:50:09,859 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-02 15:50:09,859 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 15:50:09,859 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-02 15:50:09,860 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 15:50:09,860 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-02 15:50:09,860 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-02 15:50:09,865 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 16:06:32,880 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 16:06:32,881 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-02 16:06:32,881 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 16:06:32,881 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 16:06:32,909 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 16:06:32,910 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 16:06:32,915 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 16:06:32,915 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 16:06:32,916 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 16:06:32,916 - app - __init__.py- DEBUG - 验证Json的id要素成功;
2016-06-02 16:06:32,916 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 16:06:32,916 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-02 16:06:32,917 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 16:06:32,917 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-02 16:06:32,917 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-02 16:06:32,918 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-02 16:06:32,923 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-02 16:06:32,923 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-02 16:06:32,924 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 16:06:32,925 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 16:06:32,928 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 16:06:32,928 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 16:06:32,929 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 16:06:32,929 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-02 16:06:32,929 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc_err失败;
2016-06-02 16:06:32,930 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-02 16:06:32,930 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 16:06:32,930 - app - __init__.py- ERROR - 验证Json的id要素失败;
2016-06-02 16:06:32,930 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-02 16:06:32,931 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 16:06:32,931 - app - __init__.py- ERROR - 验证Json的jsonRpcVersion要素失败;
2016-06-02 16:06:32,931 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-02 16:06:32,931 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 16:06:32,932 - app - __init__.py- ERROR - 你需要登录后才能访问此方法！
2016-06-02 16:06:32,933 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-02 16:06:32,933 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-02 16:06:32,933 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-02 16:06:32,937 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-02 21:37:10,733 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-02 21:37:10,733 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-02 21:37:10,733 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 21:37:10,734 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 21:37:10,820 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 21:37:10,820 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 21:37:10,824 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 21:37:10,824 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-02 21:37:10,824 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc成功;
2016-06-02 21:37:10,825 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 21:37:10,825 - app - __init__.py- DEBUG - 验证Json的id要素成功;
2016-06-02 21:37:10,825 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 21:37:10,825 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-02 21:37:10,826 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 21:37:10,826 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-02 21:37:10,829 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-02 21:37:10,829 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-02 21:37:10,829 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-02 21:37:10,834 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-02 21:37:10,835 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-02 21:37:10,836 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-02 21:37:10,836 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-02 21:37:10,840 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-02 21:37:10,840 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-02 21:37:10,841 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-02 21:37:10,841 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-02 21:37:10,841 - app - __init__.py- ERROR - 当前模块idc查找函数getIdc_err失败;
2016-06-02 21:37:10,842 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-02 21:37:10,842 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-02 21:37:10,843 - app - __init__.py- ERROR - 验证Json的id要素失败;
2016-06-02 21:37:10,843 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-02 21:37:10,844 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-02 21:37:10,844 - app - __init__.py- ERROR - 验证Json的jsonRpcVersion要素失败;
2016-06-02 21:37:10,844 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-02 21:37:10,845 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-02 21:37:10,845 - app - __init__.py- ERROR - 你需要登录后才能访问此方法！
2016-06-02 21:37:10,846 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-02 21:37:10,847 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-02 21:37:10,848 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-02 21:37:10,854 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-05 00:01:53,429 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"user_interface": "mdr", "name": "yz", "user_phone": "18888888888", "idc_name": "\u5317\u4eac\u4ea6\u5e84\u673a\u623f", "rel_cabinet_num": 50, "phone": "010-88886666", "address": "\u5317\u4eac\u4ea6\u5e84\u5f00\u53d1\u533a", "pact_cabinet_num": 60, "email": "mdr@51reboot.com"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-05 00:01:53,469 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-05 00:01:53,469 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-05 00:01:53,470 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-05 00:01:53,573 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-05 00:01:53,574 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-05 00:01:53,583 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-05 00:01:53,583 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-05 00:01:53,583 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc成功;
2016-06-05 00:01:53,584 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-05 00:01:53,584 - app - __init__.py- DEBUG - 验证Json的id要素成功;
2016-06-05 00:01:53,584 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-05 00:01:53,584 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-05 00:01:53,584 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-05 00:01:53,585 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-05 00:01:53,588 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-05 00:01:53,588 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-05 00:01:53,588 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-05 00:04:06,905 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"user_interface": "mdr", "name": "yz", "user_phone": "18888888888", "idc_name": "\u5317\u4eac\u4ea6\u5e84\u673a\u623f", "rel_cabinet_num": 50, "phone": "010-88886666", "address": "\u5317\u4eac\u4ea6\u5e84\u5f00\u53d1\u533a", "pact_cabinet_num": 60, "email": "mdr@51reboot.com"}, "method": "idc.create", "auth": "kch", "id": "1"}
2016-06-05 00:04:06,905 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-05 00:04:06,905 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-05 00:04:06,906 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-05 00:04:06,909 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-05 00:04:06,910 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-05 00:04:06,910 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-05 00:04:06,911 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-05 00:04:06,911 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-05 00:04:06,911 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-05 00:04:06,912 - app - __init__.py- DEBUG - 验证Json的id要素成功;
2016-06-05 00:04:06,912 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-05 00:04:06,912 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-05 00:04:06,913 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-05 00:04:06,913 - app - __init__.py- ERROR - 你需要登录后才能访问此方法！
2016-06-05 00:04:06,913 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-05 00:04:06,914 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-05 00:04:06,914 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-05 00:05:09,494 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"user_interface": "mdr", "name": "yz", "user_phone": "18888888888", "idc_name": "\u5317\u4eac\u4ea6\u5e84\u673a\u623f", "rel_cabinet_num": 50, "phone": "010-88886666", "address": "\u5317\u4eac\u4ea6\u5e84\u5f00\u53d1\u533a", "pact_cabinet_num": 60, "email": "mdr@51reboot.com"}, "method": "idc.create", "auth": "kch", "id": "1"}
2016-06-05 00:05:09,494 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-05 00:05:09,494 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-05 00:05:09,495 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-05 00:05:09,536 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-05 00:05:09,537 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-05 00:05:09,543 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-05 00:05:09,543 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-05 00:05:09,543 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-05 00:05:09,544 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-05 00:05:09,544 - app - __init__.py- DEBUG - 验证Json的id要素成功;
2016-06-05 00:05:09,544 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-05 00:05:09,544 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-05 00:05:09,545 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-05 00:05:09,545 - app - __init__.py- ERROR - 你需要登录后才能访问此方法！
2016-06-05 00:05:09,545 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-05 00:05:09,545 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-05 00:05:09,546 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-05 00:05:53,414 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"user_interface": "mdr", "name": "yz", "user_phone": "18888888888", "idc_name": "\u5317\u4eac\u4ea6\u5e84\u673a\u623f", "rel_cabinet_num": 50, "phone": "010-88886666", "address": "\u5317\u4eac\u4ea6\u5e84\u5f00\u53d1\u533a", "pact_cabinet_num": 60, "email": "mdr@51reboot.com"}, "method": "idc.create", "auth": "kch", "id": "1"}
2016-06-05 00:05:53,414 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-05 00:05:53,414 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-05 00:05:53,415 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-05 00:05:53,459 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-05 00:05:53,460 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-05 00:05:53,466 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-05 00:05:53,467 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-05 00:05:53,467 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-05 00:05:53,467 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-05 00:05:53,468 - app - __init__.py- DEBUG - 验证Json的id要素成功;
2016-06-05 00:05:53,468 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-05 00:05:53,468 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-05 00:05:53,469 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-05 00:05:53,469 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-05 00:05:53,473 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-05 00:05:53,473 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-05 00:05:53,710 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 16:46:11,748 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 16:46:11,773 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 16:46:11,773 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 16:46:11,773 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 16:46:11,890 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 16:46:11,890 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 16:46:11,915 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 16:46:11,915 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 16:46:11,915 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 16:46:11,916 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 16:46:11,916 - app - __init__.py- ERROR - 验证Json的id要素失败;
2016-06-06 16:46:11,916 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-06 16:46:11,917 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 16:46:11,917 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 16:46:11,917 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 16:46:11,917 - app - __init__.py- ERROR - 你需要登录后才能访问此方法！
2016-06-06 16:46:11,918 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-06 16:46:11,918 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-06 16:46:11,918 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-06 16:47:35,197 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 16:47:35,197 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 16:47:35,197 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 16:47:35,198 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 16:47:35,237 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 16:47:35,238 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 16:47:35,243 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 16:47:35,243 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 16:47:35,243 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 16:47:35,244 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 16:47:35,244 - app - __init__.py- ERROR - 验证Json的id要素失败;
2016-06-06 16:47:35,245 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-06 16:47:35,245 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 16:47:35,245 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 16:47:35,245 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 16:47:35,246 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 16:47:35,246 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-06 16:47:35,246 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-06 16:50:56,930 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 16:50:56,931 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 16:50:56,931 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 16:50:56,931 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 16:50:56,959 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 16:50:56,959 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 16:50:56,966 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 16:50:56,966 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 16:50:56,967 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 16:50:56,967 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 16:50:56,967 - app - __init__.py- ERROR - 验证Json的id要素失败;
2016-06-06 16:50:56,967 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-06 16:50:56,967 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 16:50:56,967 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 16:50:56,968 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 16:50:56,968 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 16:50:56,968 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-06 16:50:56,968 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-06 16:53:01,827 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 16:53:01,827 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 16:53:01,828 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 16:53:01,828 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 16:53:01,856 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 16:53:01,857 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 16:53:01,862 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 16:53:01,862 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 16:53:01,862 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 16:53:01,862 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 16:53:01,862 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 16:53:01,863 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 16:53:01,863 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 16:53:01,865 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 16:53:01,866 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 16:53:02,125 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 16:58:13,342 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 16:58:13,342 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 16:58:13,342 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 16:58:13,342 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 16:58:13,373 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 16:58:13,374 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 16:58:13,381 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 16:58:13,381 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 16:58:13,381 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 16:58:13,381 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 16:58:13,381 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 16:58:13,381 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 16:58:13,382 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 16:58:13,384 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 16:58:13,385 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 16:58:13,417 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 17:05:47,671 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 17:05:47,671 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 17:05:47,672 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 17:05:47,672 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 17:05:47,701 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 17:05:47,702 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 17:05:47,710 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 17:05:47,710 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 17:05:47,710 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 17:05:47,710 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 17:05:47,711 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 17:05:47,711 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 17:05:47,711 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 17:05:47,715 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 17:05:47,715 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 17:05:47,750 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 17:14:07,469 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 17:14:07,469 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 17:14:07,469 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 17:14:07,469 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 17:14:07,503 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 17:14:07,503 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 17:14:07,511 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 17:14:07,511 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 17:14:07,511 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 17:14:07,512 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 17:14:07,512 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 17:14:07,512 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 17:14:07,512 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 17:14:07,515 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 17:14:07,515 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 17:14:07,548 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 17:25:56,385 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 17:25:56,385 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 17:25:56,386 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 17:25:56,386 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 17:25:56,417 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 17:25:56,417 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 17:25:56,425 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 17:25:56,425 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 17:25:56,425 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 17:25:56,425 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 17:25:56,425 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 17:25:56,425 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 17:25:56,425 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 17:25:56,428 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 17:25:56,428 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 17:25:56,457 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 17:30:04,873 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 17:30:04,873 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 17:30:04,873 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 17:30:04,873 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 17:30:04,908 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 17:30:04,909 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 17:30:04,914 - app - __init__.py- ERROR - 模块idc加载失败！
2016-06-06 17:30:04,914 - app - __init__.py- DEBUG - 执行函数validata_HasModule验证失败;
2016-06-06 17:30:04,914 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 17:30:04,914 - app - __init__.py- ERROR - 当前模块idc查找函数get失败;
2016-06-06 17:30:04,914 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-06 17:30:04,914 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 17:30:04,914 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 17:30:04,915 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 17:30:04,915 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 17:30:04,915 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-06 17:30:04,915 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-06 17:31:24,273 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 17:31:24,273 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 17:31:24,274 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 17:31:24,274 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 17:31:24,278 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 17:31:24,279 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 17:31:24,290 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 17:31:24,291 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 17:31:24,291 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 17:31:24,291 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 17:31:24,291 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 17:31:24,292 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 17:31:24,292 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 17:31:24,296 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 17:31:24,296 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 17:31:24,326 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 17:32:39,436 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 17:32:39,436 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 17:32:39,437 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 17:32:39,437 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 17:32:39,472 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 17:32:39,473 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 17:32:39,480 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 17:32:39,480 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 17:32:39,480 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 17:32:39,481 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 17:32:39,481 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 17:32:39,481 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 17:32:39,481 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 17:32:39,484 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 17:32:39,485 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 17:32:39,511 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 17:35:02,125 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 17:35:02,125 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 17:35:02,126 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 17:35:02,126 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 17:35:02,156 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 17:35:02,156 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 17:35:02,164 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 17:35:02,164 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 17:35:02,164 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 17:35:02,164 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 17:35:02,164 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 17:35:02,164 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 17:35:02,165 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 17:35:02,167 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 17:35:02,168 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 17:35:02,194 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 17:42:52,418 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 17:42:52,418 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 17:42:52,418 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 17:42:52,419 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 17:42:52,447 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 17:42:52,448 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 17:42:52,456 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 17:42:52,456 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 17:42:52,456 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 17:42:52,457 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 17:42:52,457 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 17:42:52,457 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 17:42:52,457 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 17:42:52,460 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 17:42:52,461 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 17:42:52,494 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 17:45:12,072 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 17:45:12,073 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 17:45:12,074 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 17:45:12,074 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 17:45:12,077 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 17:45:12,077 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 17:45:12,077 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 17:45:12,077 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 17:45:12,077 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 17:45:12,077 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 17:45:12,078 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 17:45:12,078 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 17:45:12,078 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 17:45:12,081 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 17:45:12,082 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 17:45:12,084 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 17:45:44,966 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 17:45:44,967 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 17:45:44,967 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 17:45:44,969 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 17:45:44,972 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 17:45:44,973 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 17:45:44,973 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 17:45:44,973 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 17:45:44,974 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 17:45:44,974 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 17:45:44,974 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 17:45:44,974 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 17:45:44,975 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 17:45:44,978 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 17:45:44,978 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 17:45:44,982 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 17:47:44,778 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": "name"}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 17:47:44,779 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 17:47:44,779 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 17:47:44,779 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 17:47:44,783 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 17:47:44,783 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 17:47:44,783 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 17:47:44,784 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 17:47:44,785 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 17:47:44,785 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 17:47:44,785 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 17:47:44,785 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 17:47:44,786 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 17:47:44,789 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 17:47:44,789 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 17:48:10,891 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 17:48:10,891 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 17:48:10,892 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 17:48:10,892 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 17:48:10,895 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 17:48:10,896 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 17:48:10,896 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 17:48:10,897 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 17:48:10,897 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 17:48:10,897 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 17:48:10,897 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 17:48:10,898 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 17:48:10,898 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 17:48:10,902 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 17:48:10,902 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 17:48:10,906 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 17:48:45,938 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 17:48:45,939 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 17:48:45,939 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 17:48:45,939 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 17:48:45,943 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 17:48:45,943 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 17:48:45,943 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 17:48:45,944 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 17:48:45,944 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 17:48:45,944 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 17:48:45,944 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 17:48:45,944 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 17:48:45,945 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 17:48:45,948 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 17:48:45,949 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 17:48:45,951 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 17:50:58,906 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 17:50:58,906 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 17:50:58,906 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 17:50:58,906 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 17:50:58,937 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 17:50:58,937 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 17:50:58,944 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 17:50:58,944 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 17:50:58,944 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 17:50:58,945 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 17:50:58,945 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 17:50:58,945 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 17:50:58,945 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 17:50:58,948 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 17:50:58,948 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 17:50:58,975 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 18:09:10,181 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 18:09:10,182 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:09:10,182 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:09:10,182 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:09:10,211 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:09:10,211 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:09:10,219 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:09:10,219 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 18:09:10,219 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 18:09:10,219 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:09:10,220 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 18:09:10,220 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:09:10,220 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 18:09:10,223 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 18:09:10,223 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 18:09:10,254 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 18:12:00,827 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 18:12:00,827 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:12:00,828 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:12:00,828 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:12:00,858 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:12:00,858 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:12:00,866 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:12:00,866 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 18:12:00,866 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 18:12:00,866 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:12:00,867 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 18:12:00,867 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:12:00,867 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 18:12:00,870 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 18:12:00,870 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 18:12:00,901 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 18:15:53,961 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 18:15:53,961 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:15:53,962 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:15:53,962 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:15:53,967 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:15:53,967 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:15:53,967 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:15:53,968 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 18:15:53,968 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 18:15:53,969 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:15:53,969 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 18:15:53,969 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:15:53,969 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 18:15:53,972 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 18:15:53,972 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 18:15:53,974 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 18:26:16,483 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 18:26:16,484 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:26:16,484 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:26:16,484 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:26:16,513 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:26:16,514 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:26:16,522 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:26:16,522 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 18:26:16,522 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 18:26:16,522 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:26:16,522 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 18:26:16,522 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:26:16,523 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 18:26:16,526 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 18:26:16,526 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 18:26:16,557 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 18:26:43,188 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-06 18:26:43,188 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:26:43,189 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:26:43,189 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:26:43,192 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:26:43,192 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:26:43,192 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:26:43,192 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-06 18:26:43,193 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc成功;
2016-06-06 18:26:43,193 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:26:43,193 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 18:26:43,194 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:26:43,194 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 18:26:43,197 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 18:26:43,198 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 18:26:43,198 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 18:26:43,204 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-06 18:26:43,204 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:26:43,204 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:26:43,204 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:26:43,208 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:26:43,208 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:26:43,208 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:26:43,208 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-06 18:26:43,208 - app - __init__.py- ERROR - 当前模块idc查找函数getIdc_err失败;
2016-06-06 18:26:43,209 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-06 18:26:43,210 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:26:43,210 - app - __init__.py- ERROR - 验证Json的jsonRpcVersion要素失败;
2016-06-06 18:26:43,210 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-06 18:26:43,210 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:26:43,211 - app - __init__.py- ERROR - 你需要登录后才能访问此方法！
2016-06-06 18:26:43,211 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-06 18:26:43,211 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-06 18:26:43,211 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-06 18:26:43,215 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-06 18:34:08,841 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-06 18:34:08,842 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:34:08,842 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:34:08,842 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:34:08,872 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:34:08,873 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:34:08,881 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:34:08,881 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-06 18:34:08,881 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc成功;
2016-06-06 18:34:08,881 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:34:08,882 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 18:34:08,882 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:34:08,882 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 18:34:08,885 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 18:34:08,885 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 18:34:08,885 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 18:34:08,889 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-06 18:34:08,890 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:34:08,890 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:34:08,890 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:34:08,894 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:34:08,895 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:34:08,895 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:34:08,896 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-06 18:34:08,896 - app - __init__.py- ERROR - 当前模块idc查找函数getIdc_err失败;
2016-06-06 18:34:08,896 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-06 18:34:08,897 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:34:08,897 - app - __init__.py- ERROR - 验证Json的jsonRpcVersion要素失败;
2016-06-06 18:34:08,897 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-06 18:34:08,897 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:34:08,897 - app - __init__.py- ERROR - 你需要登录后才能访问此方法！
2016-06-06 18:34:08,897 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-06 18:34:08,898 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-06 18:34:08,898 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-06 18:34:08,902 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-06 18:35:41,915 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 18:35:41,915 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:35:41,915 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:35:41,915 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:35:41,919 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:35:41,920 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:35:41,920 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:35:41,920 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 18:35:41,920 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 18:35:41,921 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:35:41,921 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 18:35:41,921 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:35:41,922 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 18:35:41,925 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 18:35:41,925 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 18:35:41,953 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 18:36:37,181 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 18:36:37,182 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:36:37,182 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:36:37,182 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:36:37,211 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:36:37,211 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:36:37,218 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:36:37,218 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 18:36:37,219 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 18:36:37,219 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:36:37,219 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 18:36:37,219 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:36:37,219 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 18:36:37,222 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 18:36:37,223 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 18:36:53,759 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 18:36:53,760 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:36:53,760 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:36:53,760 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:36:53,788 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:36:53,789 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:36:53,796 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:36:53,796 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 18:36:53,796 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 18:36:53,797 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:36:53,797 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 18:36:53,797 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:36:53,797 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 18:36:53,800 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 18:36:53,800 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 18:36:53,827 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 18:37:50,512 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 18:37:50,513 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:37:50,513 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:37:50,514 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:37:50,544 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:37:50,544 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:37:50,551 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:37:50,551 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 18:37:50,551 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 18:37:50,551 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:37:50,551 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 18:37:50,552 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:37:50,552 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 18:37:50,556 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 18:37:50,556 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 18:37:50,583 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 18:40:44,473 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 18:40:44,473 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:40:44,474 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:40:44,474 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:40:44,478 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:40:44,478 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:40:44,478 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:40:44,478 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 18:40:44,478 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 18:40:44,479 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:40:44,480 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 18:40:44,480 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:40:44,480 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 18:40:44,483 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 18:40:44,483 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 18:40:44,486 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 18:58:20,867 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 18:58:20,868 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:58:20,868 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:58:20,868 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:58:20,872 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:58:20,872 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:58:20,872 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:58:20,872 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 18:58:20,872 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 18:58:20,873 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:58:20,873 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 18:58:20,873 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:58:20,873 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 18:58:20,876 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 18:58:20,877 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 18:58:20,880 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 18:59:55,230 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 18:59:55,231 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 18:59:55,231 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 18:59:55,231 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 18:59:55,235 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 18:59:55,236 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 18:59:55,236 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 18:59:55,236 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 18:59:55,237 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 18:59:55,237 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 18:59:55,237 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 18:59:55,238 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 18:59:55,238 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 18:59:55,242 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 18:59:55,243 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 18:59:55,245 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 19:01:13,745 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 19:01:13,745 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:01:13,745 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:01:13,746 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:01:13,749 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:01:13,750 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:01:13,750 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 19:01:13,750 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 19:01:13,750 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 19:01:13,751 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:01:13,751 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:01:13,751 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:01:13,752 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:01:13,755 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 19:01:13,756 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 19:01:13,760 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 19:02:12,046 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 19:02:12,046 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:02:12,047 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:02:12,047 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:02:12,053 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:02:12,053 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:02:12,053 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 19:02:12,054 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 19:02:12,054 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 19:02:12,054 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:02:12,054 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:02:12,054 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:02:12,055 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:02:12,057 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 19:02:12,058 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 19:02:12,061 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 19:03:27,037 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 19:03:27,038 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:03:27,038 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:03:27,038 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:03:27,042 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:03:27,042 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:03:27,042 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 19:03:27,042 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 19:03:27,043 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 19:03:27,043 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:03:27,043 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:03:27,043 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:03:27,044 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:03:27,048 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 19:03:27,049 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 19:03:27,052 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 19:24:52,459 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-06 19:24:52,460 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:24:52,460 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:24:52,461 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:24:52,493 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:24:52,494 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:24:52,500 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 19:24:52,500 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-06 19:24:52,501 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc成功;
2016-06-06 19:24:52,501 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:24:52,501 - app - __init__.py- DEBUG - 验证Json的id要素成功;
2016-06-06 19:24:52,501 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:24:52,502 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:24:52,502 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:24:52,502 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:24:52,505 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 19:24:52,505 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 19:24:52,505 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 19:24:52,510 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-06 19:24:52,510 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:24:52,511 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:24:52,511 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:24:52,515 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:24:52,516 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:24:52,516 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 19:24:52,516 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-06 19:24:52,516 - app - __init__.py- ERROR - 当前模块idc查找函数getIdc_err失败;
2016-06-06 19:24:52,517 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-06 19:24:52,517 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:24:52,518 - app - __init__.py- ERROR - 验证Json的id要素失败;
2016-06-06 19:24:52,518 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-06 19:24:52,518 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:24:52,518 - app - __init__.py- ERROR - 验证Json的jsonRpcVersion要素失败;
2016-06-06 19:24:52,519 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-06 19:24:52,519 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:24:52,519 - app - __init__.py- ERROR - 你需要登录后才能访问此方法！
2016-06-06 19:24:52,519 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-06 19:24:52,519 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-06 19:24:52,520 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-06 19:24:52,526 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-06 19:28:53,684 - app - views.py- DEBUG - 用户请求的content-type为： application/json_err, 不予处理
2016-06-06 19:29:31,804 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-06 19:29:31,805 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:29:31,806 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:29:31,806 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:29:31,809 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:29:31,810 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:29:31,810 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 19:29:31,810 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-06 19:29:31,810 - app - __init__.py- ERROR - 当前模块idc查找函数getIdc_err失败;
2016-06-06 19:29:31,811 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-06 19:29:31,811 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:29:31,811 - app - __init__.py- ERROR - 验证Json的id要素失败;
2016-06-06 19:29:31,812 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-06 19:29:31,812 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:29:31,812 - app - __init__.py- ERROR - 验证Json的jsonRpcVersion要素失败;
2016-06-06 19:29:31,813 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-06 19:29:31,813 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:29:31,813 - app - __init__.py- ERROR - 你需要登录后才能访问此方法！
2016-06-06 19:29:31,814 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-06 19:29:31,814 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-06 19:29:31,814 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-06 19:30:34,131 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "1.0", "params": {"idcId": "2"}, "method": "idc.getIdc_err", "auth": "kch", "id": "2"}
2016-06-06 19:30:34,133 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:30:34,133 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:30:34,133 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:30:34,167 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:30:34,167 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:30:34,174 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 19:30:34,175 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc_err;
2016-06-06 19:30:34,175 - app - __init__.py- ERROR - 当前模块idc查找函数getIdc_err失败;
2016-06-06 19:30:34,176 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-06 19:30:34,176 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:30:34,176 - app - __init__.py- ERROR - 验证Json的id要素失败;
2016-06-06 19:30:34,177 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-06 19:30:34,178 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:30:34,178 - app - __init__.py- ERROR - 验证Json的jsonRpcVersion要素失败;
2016-06-06 19:30:34,178 - app - __init__.py- DEBUG - 执行函数validata_version验证失败;
2016-06-06 19:30:34,178 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:30:34,179 - app - __init__.py- ERROR - 你需要登录后才能访问此方法！
2016-06-06 19:30:34,179 - app - __init__.py- DEBUG - 执行函数validata_withoutlogin验证失败;
2016-06-06 19:30:34,179 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-06 19:30:34,179 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-06 19:32:07,074 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-06 19:32:07,074 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:32:07,074 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:32:07,074 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:32:07,081 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:32:07,083 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:32:07,085 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 19:32:07,085 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-06 19:32:07,085 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc成功;
2016-06-06 19:32:07,086 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:32:07,086 - app - __init__.py- DEBUG - 验证Json的id要素成功;
2016-06-06 19:32:07,086 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:32:07,086 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:32:07,086 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:32:07,086 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:32:07,089 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 19:32:07,089 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 19:32:07,090 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 19:33:01,191 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-06 19:33:01,192 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:33:01,192 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:33:01,193 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:33:01,229 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:33:01,229 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:33:01,234 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 19:33:01,234 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-06 19:33:01,234 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc成功;
2016-06-06 19:33:01,234 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:33:01,234 - app - __init__.py- DEBUG - 验证Json的id要素成功;
2016-06-06 19:33:01,235 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:33:01,235 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:33:01,235 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:33:01,235 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:33:01,238 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 19:33:01,239 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 19:33:01,239 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 19:34:01,839 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"user_interface": "mdr", "name": "yz", "user_phone": "18888888888", "idc_name": "\u5317\u4eac\u4ea6\u5e84\u673a\u623f", "rel_cabinet_num": 50, "phone": "010-88886666", "address": "\u5317\u4eac\u4ea6\u5e84\u5f00\u53d1\u533a", "pact_cabinet_num": 60, "email": "mdr@51reboot.com"}, "method": "idc.create", "auth": "kch", "id": "1"}
2016-06-06 19:34:01,839 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:34:01,841 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:34:01,841 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:34:01,844 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:34:01,845 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:34:01,845 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 19:34:01,845 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-06 19:34:01,845 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-06 19:34:01,845 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:34:01,846 - app - __init__.py- DEBUG - 验证Json的id要素成功;
2016-06-06 19:34:01,848 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:34:01,849 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:34:01,849 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:34:01,850 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:34:01,856 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 19:34:01,857 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 19:35:27,077 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"user_interface": "mdr", "name": "yz", "user_phone": "18888888888", "idc_name": "\u5317\u4eac\u4ea6\u5e84\u673a\u623f", "rel_cabinet_num": 50, "phone": "010-88886666", "address": "\u5317\u4eac\u4ea6\u5e84\u5f00\u53d1\u533a", "pact_cabinet_num": 60, "email": "mdr@51reboot.com"}, "method": "idc.create", "auth": "kch", "id": "1"}
2016-06-06 19:35:27,077 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:35:27,077 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:35:27,079 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:35:27,113 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:35:27,113 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:35:27,121 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 19:35:27,121 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-06 19:35:27,121 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-06 19:35:27,122 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:35:27,122 - app - __init__.py- DEBUG - 验证Json的id要素成功;
2016-06-06 19:35:27,122 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:35:27,122 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:35:27,123 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:35:27,123 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:35:27,129 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 19:35:27,130 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 19:35:27,159 - app - idc.py- WARNING - commit error:(_mysql_exceptions.IntegrityError) (1062, "Duplicate entry 'yz' for key 'ix_idc_name'")
2016-06-06 19:36:21,593 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"user_interface": "mdr", "name": "yz1", "user_phone": "18888888888", "idc_name": "\u5317\u4eac\u4ea6\u5e84\u673a\u623f", "rel_cabinet_num": 50, "phone": "010-88886666", "address": "\u5317\u4eac\u4ea6\u5e84\u5f00\u53d1\u533a", "pact_cabinet_num": 60, "email": "mdr@51reboot.com"}, "method": "idc.create", "auth": "kch", "id": "1"}
2016-06-06 19:36:21,594 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:36:21,595 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:36:21,595 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:36:21,603 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:36:21,604 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:36:21,606 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 19:36:21,607 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-06 19:36:21,609 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-06 19:36:21,609 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:36:21,610 - app - __init__.py- DEBUG - 验证Json的id要素成功;
2016-06-06 19:36:21,610 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:36:21,611 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:36:21,612 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:36:21,612 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:36:21,617 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 19:36:21,617 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 19:36:21,625 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 19:39:05,960 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"user_interface": "mdr", "name": "yz1", "user_phone": "18888888888", "idc_name": "\u5317\u4eac\u4ea6\u5e84\u673a\u623f", "rel_cabinet_num": 50, "phone": "010-88886666", "address": "\u5317\u4eac\u4ea6\u5e84\u5f00\u53d1\u533a", "pact_cabinet_num": 60, "email": "mdr@51reboot.com"}, "method": "idc.create", "auth": "kch", "id": "1"}
2016-06-06 19:39:05,960 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:39:05,960 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:40:03,116 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"user_interface": "mdr", "name": "yz1", "user_phone": "18888888888", "idc_name": "\u5317\u4eac\u4ea6\u5e84\u673a\u623f", "rel_cabinet_num": 50, "phone": "010-88886666", "address": "\u5317\u4eac\u4ea6\u5e84\u5f00\u53d1\u533a", "pact_cabinet_num": 60, "email": "mdr@51reboot.com"}, "method": "idc.create", "auth": "kch", "id": "1"}
2016-06-06 19:40:03,116 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:40:03,116 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:40:03,117 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:40:03,148 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:40:03,148 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:40:03,153 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 19:40:03,153 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-06 19:40:03,154 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-06 19:40:03,154 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:40:03,154 - app - __init__.py- DEBUG - 验证Json的id要素成功;
2016-06-06 19:40:03,154 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:40:03,154 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:40:03,155 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:40:03,155 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:40:03,157 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 19:40:03,158 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 19:40:03,185 - app - idc.py- WARNING - commit error:(_mysql_exceptions.IntegrityError) (1062, "Duplicate entry 'yz1' for key 'ix_idc_name'")
2016-06-06 19:40:35,553 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"user_interface": "mdr", "name": "yz2", "user_phone": "18888888888", "idc_name": "\u5317\u4eac\u4ea6\u5e84\u673a\u623f", "rel_cabinet_num": 50, "phone": "010-88886666", "address": "\u5317\u4eac\u4ea6\u5e84\u5f00\u53d1\u533a", "pact_cabinet_num": 60, "email": "mdr@51reboot.com"}, "method": "idc.create", "auth": "kch", "id": "1"}
2016-06-06 19:40:35,553 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:40:35,553 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:40:35,553 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:40:35,557 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:40:35,557 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:40:35,557 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 19:40:35,557 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-06 19:40:35,558 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-06 19:40:35,558 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:40:35,559 - app - __init__.py- DEBUG - 验证Json的id要素成功;
2016-06-06 19:40:35,559 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:40:35,559 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:40:35,559 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:40:35,559 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:40:35,563 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 19:40:35,564 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 19:40:35,568 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 19:41:03,578 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 19:41:03,578 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:41:03,578 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:41:03,579 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:41:03,581 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:41:03,581 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:41:03,581 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 19:41:03,581 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 19:41:03,581 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 19:41:03,582 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:41:03,583 - app - __init__.py- ERROR - 验证Json的id要素失败;
2016-06-06 19:41:03,583 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-06 19:41:03,583 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:41:03,583 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:41:03,583 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:41:03,584 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:41:03,584 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-06 19:41:03,584 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-06 19:42:04,098 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 19:42:04,098 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:42:04,098 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:42:04,098 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:42:04,102 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:42:04,102 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:42:04,102 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 19:42:04,102 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 19:42:04,102 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 19:42:04,102 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:42:04,102 - app - __init__.py- ERROR - 验证Json的id要素失败;
2016-06-06 19:42:04,103 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-06 19:42:04,103 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:42:04,103 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:42:04,103 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:42:04,104 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:42:04,104 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-06 19:42:04,104 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-06 19:43:34,072 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 19:43:34,072 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:43:34,072 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:43:34,073 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:43:34,077 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:43:34,077 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:43:34,077 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 19:43:34,077 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 19:43:34,077 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 19:43:34,078 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:43:34,078 - app - __init__.py- ERROR - 验证Json的id要素失败;
2016-06-06 19:43:34,078 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-06 19:43:34,078 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:43:34,078 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:43:34,079 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:43:34,079 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:43:34,079 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-06 19:43:34,079 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-06 19:43:49,947 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 19:43:49,948 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:43:49,948 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:43:49,948 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:43:49,952 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:43:49,953 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:43:49,953 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 19:43:49,953 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 19:43:49,953 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 19:43:49,954 - app - __init__.py- DEBUG - 验证Json的id要素;
2016-06-06 19:43:49,954 - app - __init__.py- ERROR - 验证Json的id要素失败;
2016-06-06 19:43:49,954 - app - __init__.py- DEBUG - 执行函数validata_id验证失败;
2016-06-06 19:43:49,954 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:43:49,954 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:43:49,955 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:43:49,955 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:43:49,955 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-06 19:43:49,956 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-06 19:44:48,562 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 19:44:48,563 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:44:48,563 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:44:48,563 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:44:48,592 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:44:48,594 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:44:48,600 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 19:44:48,600 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 19:44:48,600 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 19:44:48,600 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:44:48,600 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:44:48,601 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:44:48,601 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:44:48,604 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 19:44:48,604 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 19:44:48,639 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 19:50:07,571 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 19:50:07,571 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:50:07,571 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:50:07,571 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:50:07,599 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:50:07,599 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:50:07,603 - app - __init__.py- ERROR - 模块idc加载失败！
2016-06-06 19:50:07,603 - app - __init__.py- DEBUG - 执行函数validata_HasModule验证失败;
2016-06-06 19:50:07,603 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 19:50:07,604 - app - __init__.py- ERROR - 当前模块idc查找函数get失败;
2016-06-06 19:50:07,604 - app - __init__.py- DEBUG - 执行函数validata_hasFunction验证失败;
2016-06-06 19:50:07,604 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:50:07,604 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:50:07,604 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:50:07,604 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:50:07,605 - app - __init__.py- ERROR - jsonrpc调用失败，详见系统后台日志！
2016-06-06 19:50:07,605 - app - __init__.py- DEBUG - 通过函数组装调用失败返回的json信息;
2016-06-06 19:51:15,455 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 19:51:15,456 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 19:51:15,456 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 19:51:15,457 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 19:51:15,460 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 19:51:15,461 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 19:51:15,467 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 19:51:15,468 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 19:51:15,468 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 19:51:15,468 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 19:51:15,468 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 19:51:15,468 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 19:51:15,469 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 19:51:15,472 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 19:51:15,472 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 19:51:15,501 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 20:09:38,511 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"data": {"name": "yz"}, "where": {"id": 2}}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 20:09:38,511 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 20:09:38,511 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 20:09:38,511 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 20:09:38,545 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 20:09:38,545 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 20:09:38,554 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 20:09:38,554 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 20:09:38,554 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 20:09:38,554 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 20:09:38,554 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 20:09:38,554 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 20:09:38,555 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 20:09:38,557 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 20:09:38,558 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 20:09:38,592 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 20:11:16,240 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"data": {"name": "yz"}, "where": {"id": 2}}, "id": 0, "auth": null, "method": "idc.update"}
2016-06-06 20:11:16,241 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 20:11:16,241 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 20:11:16,242 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 20:11:16,271 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 20:11:16,272 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 20:11:16,277 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 20:11:16,277 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-06 20:11:16,277 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-06 20:11:16,277 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 20:11:16,277 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 20:11:16,278 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 20:11:16,278 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 20:11:16,281 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 20:11:16,281 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 20:13:16,676 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"data": {"name": "kang"}, "where": {"id": 2}}, "id": 0, "auth": null, "method": "idc.update"}
2016-06-06 20:13:16,678 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 20:13:16,678 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 20:13:16,680 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 20:13:16,683 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 20:13:16,684 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 20:13:16,684 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 20:13:16,684 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-06 20:13:16,685 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-06 20:13:16,685 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 20:13:16,685 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 20:13:16,685 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 20:13:16,685 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 20:13:16,688 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 20:13:16,688 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 20:13:16,690 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 20:16:36,312 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"id": 2}, "id": 0, "auth": null, "method": "idc.update"}
2016-06-06 20:16:36,313 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 20:16:36,313 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 20:16:36,313 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 20:16:36,342 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 20:16:36,342 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 20:16:36,349 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 20:16:36,349 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-06 20:16:36,350 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-06 20:16:36,350 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 20:16:36,350 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 20:16:36,350 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 20:16:36,350 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 20:16:36,354 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 20:16:36,354 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 20:16:36,354 - app - idc.py- WARNING - 没有要更新数据
2016-06-06 20:17:14,670 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"id": 2}, "id": 0, "auth": null, "method": "idc.delete"}
2016-06-06 20:17:14,670 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 20:17:14,672 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 20:17:14,672 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 20:17:14,676 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 20:17:14,677 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 20:17:14,677 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-06 20:17:14,677 - app - __init__.py- DEBUG - 验证模块idc是否有此函数delete;
2016-06-06 20:17:14,678 - app - __init__.py- DEBUG - 当前模块idc查找函数delete成功;
2016-06-06 20:17:14,678 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 20:17:14,678 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 20:17:14,678 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 20:17:14,678 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 20:17:14,682 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 20:17:14,682 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 20:17:14,719 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 20:22:22,480 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"user_interface": "mdr", "name": "yz6", "user_phone": "18888888888", "idc_name": "\u5317\u4eac\u4ea6\u5e84\u673a\u623f", "rel_cabinet_num": 50, "phone": "010-88886666", "address": "\u5317\u4eac\u4ea6\u5e84\u5f00\u53d1\u533a", "pact_cabinet_num": 60, "email": "mdr@51reboot.com"}, "method": "idc.create", "auth": "kch", "id": "1"}
2016-06-06 20:22:22,481 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 20:22:22,481 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 20:22:22,482 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 20:22:22,509 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 20:22:22,510 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 20:22:22,519 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 20:22:22,519 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-06 20:22:22,519 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-06 20:22:22,520 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 20:22:22,520 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 20:22:22,520 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 20:22:22,520 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 20:22:22,523 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 20:22:22,523 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 20:22:22,552 - app - idc.py- DEBUG - 新增参数为 {u'user_interface': u'mdr', u'name': u'yz6', u'user_phone': u'18888888888', u'idc_name': u'\u5317\u4eac\u4ea6\u5e84\u673a\u623f', u'rel_cabinet_num': 50, u'phone': u'010-88886666', u'address': u'\u5317\u4eac\u4ea6\u5e84\u5f00\u53d1\u533a', u'pact_cabinet_num': 60, u'email': u'mdr@51reboot.com'}的数据成功
2016-06-06 20:22:22,555 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 20:24:09,447 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"user_interface": "mdr", "name": "yz8", "user_phone": "18888888888", "idc_name": "\u5317\u4eac\u4ea6\u5e84\u673a\u623f", "rel_cabinet_num": 50, "phone": "010-88886666", "address": "\u5317\u4eac\u4ea6\u5e84\u5f00\u53d1\u533a", "pact_cabinet_num": 60, "email": "mdr@51reboot.com"}, "method": "idc.create", "auth": "kch", "id": "1"}
2016-06-06 20:24:09,448 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 20:24:09,448 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 20:24:09,448 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 20:24:09,451 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 20:24:09,452 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 20:24:09,452 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 20:24:09,453 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-06 20:24:09,453 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-06 20:24:09,453 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 20:24:09,454 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 20:24:09,454 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 20:24:09,454 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 20:24:09,457 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 20:24:09,458 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 20:24:09,461 - app - idc.py- DEBUG - 新增参数为 {u'user_interface': u'mdr', u'name': u'yz8', u'user_phone': u'18888888888', u'idc_name': u'\u5317\u4eac\u4ea6\u5e84\u673a\u623f', u'rel_cabinet_num': 50, u'phone': u'010-88886666', u'address': u'\u5317\u4eac\u4ea6\u5e84\u5f00\u53d1\u533a', u'pact_cabinet_num': 60, u'email': u'mdr@51reboot.com'}的数据成功
2016-06-06 20:24:09,463 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 20:24:09,468 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"output": ["name"]}, "id": 0, "auth": null, "method": "idc.get"}
2016-06-06 20:24:09,469 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 20:24:09,470 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 20:24:09,471 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 20:24:09,474 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 20:24:09,475 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 20:24:09,475 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 20:24:09,475 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-06 20:24:09,476 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-06 20:24:09,478 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 20:24:09,478 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 20:24:09,478 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 20:24:09,479 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 20:24:09,482 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 20:24:09,482 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 20:24:09,485 - app - idc.py- DEBUG - 查询参数为 {u'output': [u'name']}的数据成功
2016-06-06 20:24:09,485 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 20:24:09,490 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"data": {"name": "kang1"}, "where": {"id": 3}}, "id": 0, "auth": null, "method": "idc.update"}
2016-06-06 20:24:09,490 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 20:24:09,491 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 20:24:09,491 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 20:24:09,495 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 20:24:09,496 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 20:24:09,496 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 20:24:09,497 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-06 20:24:09,497 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-06 20:24:09,497 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 20:24:09,498 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 20:24:09,498 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 20:24:09,498 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 20:24:09,502 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 20:24:09,503 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 20:24:09,506 - app - idc.py- DEBUG - 更新id为： 3的数据成功
2016-06-06 20:24:09,509 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-06 20:24:09,513 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"id": 4}, "id": 0, "auth": null, "method": "idc.delete"}
2016-06-06 20:24:09,514 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-06 20:24:09,514 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-06 20:24:09,515 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-06 20:24:09,519 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-06 20:24:09,519 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-06 20:24:09,520 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-06 20:24:09,520 - app - __init__.py- DEBUG - 验证模块idc是否有此函数delete;
2016-06-06 20:24:09,520 - app - __init__.py- DEBUG - 当前模块idc查找函数delete成功;
2016-06-06 20:24:09,520 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-06 20:24:09,520 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-06 20:24:09,521 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-06 20:24:09,521 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-06 20:24:09,524 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-06 20:24:09,524 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-06 20:24:09,526 - app - idc.py- DEBUG - 删除id为： 4的数据成功
2016-06-06 20:24:09,527 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-07 20:53:29,413 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-07 20:53:29,429 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-07 20:53:29,429 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-07 20:53:29,429 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 20:53:29,522 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-07 20:53:29,523 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 20:53:29,558 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 20:53:29,558 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-07 20:53:29,559 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc成功;
2016-06-07 20:53:29,559 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-07 20:53:29,559 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-07 20:53:29,559 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-07 20:53:29,559 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-07 20:53:29,562 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-07 20:53:29,562 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-07 20:53:29,563 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-07 21:04:56,269 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-07 21:04:56,270 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-07 21:04:56,271 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-07 21:04:56,271 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 21:04:56,298 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-07 21:04:56,302 - app - __init__.py- DEBUG - 现在进入函数runAllValidata调用;
2016-06-07 21:13:07,301 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-07 21:13:07,301 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-07 21:13:07,302 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-07 21:13:07,302 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 21:13:07,331 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-07 21:13:35,581 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-07 21:13:35,581 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-07 21:13:35,582 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-07 21:13:35,582 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 21:13:35,628 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-07 21:13:35,633 - app - __init__.py- DEBUG - 现在进入函数runAllValidata调用;
2016-06-07 21:17:39,022 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-07 21:17:39,022 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-07 21:17:39,023 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-07 21:17:39,023 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 21:17:39,051 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-07 21:17:39,052 - app - __init__.py- DEBUG - 现在进入函数validata_HasModule调用;
2016-06-07 21:20:30,075 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-07 21:20:30,075 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-07 21:20:30,075 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-07 21:20:30,076 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 21:23:56,137 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-07 21:23:56,138 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-07 21:23:56,138 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-07 21:23:56,138 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 21:23:56,138 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-07 21:24:54,128 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-07 21:24:54,129 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-07 21:24:54,129 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-07 21:24:54,129 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 21:24:54,129 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-07 21:24:54,130 - app - __init__.py- ERROR - 当前模块idc查找函数getIdc失败;
2016-06-07 21:25:27,433 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-07 21:25:27,433 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-07 21:25:27,434 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-07 21:25:27,434 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 21:25:27,466 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-07 21:25:27,467 - app - __init__.py- DEBUG - 现在进入函数validata_HasModule调用;
2016-06-07 21:25:27,467 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 21:25:27,472 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 21:25:27,472 - app - __init__.py- DEBUG - 现在进入函数validata_hasFunction调用;
2016-06-07 21:25:27,472 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-07 21:25:27,472 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc成功;
2016-06-07 21:25:27,473 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-07 21:25:27,473 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-07 21:25:27,473 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-07 21:25:27,473 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-07 21:25:27,476 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-07 21:25:27,476 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-07 21:28:26,474 - app - views.py- DEBUG - 请求json数据为： {"jsonRpcVersion": "2.0", "params": {"idcId": "2"}, "method": "idc.getIdc", "auth": "kch", "id": "1"}
2016-06-07 21:28:26,474 - app - __init__.py- DEBUG - ======初始化：JsonRpc类======！
2016-06-07 21:28:26,475 - app - __init__.py- DEBUG - 初始化：Response_preform类！
2016-06-07 21:28:26,475 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 21:28:26,512 - app - __init__.py- DEBUG - 验证函数入口execute;
2016-06-07 21:28:26,512 - app - __init__.py- DEBUG - 现在进入函数validata_HasModule调用;
2016-06-07 21:28:26,513 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 21:28:26,518 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 21:28:26,518 - app - __init__.py- DEBUG - 现在进入函数validata_hasFunction调用;
2016-06-07 21:28:26,519 - app - __init__.py- DEBUG - 验证模块idc是否有此函数getIdc;
2016-06-07 21:28:26,519 - app - __init__.py- DEBUG - 当前模块idc查找函数getIdc成功;
2016-06-07 21:28:26,519 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素;
2016-06-07 21:28:26,519 - app - __init__.py- DEBUG - 验证Json的jsonRpcVersion要素成功;
2016-06-07 21:28:26,519 - app - __init__.py- DEBUG - 验证是否需要登录;
2016-06-07 21:28:26,520 - app - __init__.py- DEBUG - 该调用在白名单内，无需登录！
2016-06-07 21:28:26,523 - app - __init__.py- DEBUG - 验证通过execute;
2016-06-07 21:28:26,523 - app - __init__.py- DEBUG - json数据通过验证，等待调用方法并返回结果！
2016-06-07 21:28:26,523 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-07 21:28:26,523 - app - __init__.py- DEBUG - 组装调用成功返回的json信息;
2016-06-07 22:55:46,649 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 22:56:49,101 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 22:56:49,101 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 22:56:49,119 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 22:56:49,119 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-07 22:56:49,120 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-07 22:56:49,120 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-07 22:56:49,363 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-07 22:59:07,721 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 22:59:07,721 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 22:59:07,723 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 22:59:07,728 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-07 22:59:07,729 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-07 22:59:07,738 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-07 22:59:07,741 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-07 22:59:36,751 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 22:59:36,751 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 22:59:36,752 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 22:59:36,753 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-07 22:59:36,754 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-07 22:59:36,755 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-07 22:59:36,761 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-07 23:00:52,922 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 23:00:52,923 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 23:00:52,923 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 23:00:52,923 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-07 23:00:52,924 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-07 23:00:52,924 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-07 23:00:52,927 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-07 23:00:58,762 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 23:00:58,762 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 23:00:58,762 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 23:00:58,763 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-07 23:00:58,763 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-07 23:00:58,764 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-07 23:00:58,771 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'id': 5}}的数据成功
2016-06-07 23:05:11,273 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 23:05:11,274 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 23:05:11,274 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 23:05:11,274 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-07 23:05:11,274 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-07 23:05:11,275 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-07 23:05:11,280 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-07 23:05:13,194 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 23:05:13,194 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 23:05:13,194 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 23:05:13,194 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-07 23:05:13,194 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-07 23:05:13,195 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-07 23:05:13,205 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-07 23:05:15,146 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 23:05:15,146 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 23:05:15,146 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 23:05:15,147 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-07 23:05:15,150 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-07 23:05:15,152 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-07 23:05:15,157 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-07 23:05:31,054 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 23:05:31,054 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 23:05:31,055 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 23:05:31,055 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-07 23:05:31,056 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-07 23:05:31,057 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-07 23:05:31,068 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-07 23:06:06,859 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 23:06:06,860 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 23:06:06,860 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 23:06:06,861 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-07 23:06:06,861 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-07 23:06:06,861 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-07 23:06:06,865 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-07 23:08:59,237 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 23:08:59,237 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 23:08:59,238 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 23:08:59,238 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-07 23:08:59,238 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-07 23:08:59,239 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-07 23:08:59,243 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-07 23:09:14,660 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-07 23:09:14,660 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-07 23:09:14,662 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-07 23:09:14,662 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-07 23:09:14,662 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-07 23:09:14,663 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-07 23:09:14,669 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:11:34,310 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:11:34,321 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:11:34,346 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:11:34,346 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:11:34,346 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:11:34,346 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:11:34,598 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:12:25,006 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:12:25,007 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:12:25,007 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:12:25,008 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:12:25,008 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:12:25,009 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:12:25,015 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:15:15,387 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:15:15,388 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:15:15,391 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:15:15,392 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:15:15,412 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:15:15,423 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:15:15,438 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:15:45,562 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:15:45,563 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:15:45,564 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:15:45,564 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:15:45,565 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:15:45,565 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:15:45,570 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:17:09,023 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:17:09,023 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:17:09,023 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:17:09,023 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:17:09,023 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:17:09,023 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:17:09,029 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:17:35,003 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:17:35,003 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:17:35,004 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:17:35,005 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:17:35,006 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:17:35,006 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:17:35,018 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:17:53,868 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:17:53,868 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:17:53,869 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:17:53,869 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:17:53,870 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:17:53,871 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:17:53,876 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:18:01,217 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:18:01,217 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:18:01,218 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:18:01,218 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:18:01,218 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:18:01,219 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:18:01,223 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:18:23,991 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:18:23,992 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:18:23,992 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:18:23,992 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:18:23,993 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:18:23,993 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:18:23,998 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:19:44,644 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:19:44,644 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:19:44,645 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:19:44,645 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:19:44,645 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:19:44,646 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:19:44,649 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:20:03,977 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:20:03,977 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:20:03,978 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:20:03,979 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:20:03,979 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:20:03,980 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:20:03,985 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:20:43,159 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:20:43,160 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:20:43,160 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:20:43,160 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:20:43,160 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:20:43,161 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:20:43,165 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:20:54,692 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:20:54,692 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:20:54,693 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:20:54,693 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:20:54,693 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:20:54,693 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:20:54,700 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:22:41,391 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:22:41,392 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:22:41,392 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:22:41,393 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:22:41,393 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:22:41,393 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:22:41,403 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'id': 5}}的数据成功
2016-06-08 12:22:41,463 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:22:41,464 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:22:41,464 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:22:41,465 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:22:41,465 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:22:41,465 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:22:41,470 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:22:41,479 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:22:41,480 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:22:41,480 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:22:41,482 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:22:41,482 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:22:41,483 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:22:41,488 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'id': 3}}的数据成功
2016-06-08 12:22:45,441 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:22:45,442 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:22:45,442 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:22:45,442 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:22:45,444 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:22:45,445 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:22:45,450 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'id': 5}}的数据成功
2016-06-08 12:22:58,291 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:22:58,293 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:22:58,293 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:22:58,294 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-08 12:22:58,297 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-08 12:22:58,298 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:22:58,313 - app - idc.py- DEBUG - 更新id为： 5的数据成功
2016-06-08 12:23:00,022 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:23:00,023 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:23:00,024 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:23:00,025 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:23:00,027 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:23:00,028 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:23:00,038 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:23:21,215 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:23:21,216 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:23:21,216 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:23:21,216 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:23:21,216 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:23:21,216 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:23:21,224 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:25:41,199 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:25:41,200 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:25:41,200 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:25:41,200 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:25:41,200 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:25:41,200 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:25:41,206 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:26:32,726 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:26:32,726 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:26:32,726 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:26:32,727 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:26:32,727 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:26:32,727 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:26:32,732 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:26:47,743 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:26:47,743 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:26:47,743 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:26:47,744 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:26:47,745 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:26:47,745 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:26:47,750 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:26:49,055 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:26:49,056 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:26:49,056 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:26:49,056 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:26:49,057 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:26:49,057 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:26:49,061 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:26:50,435 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:26:50,437 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:26:50,439 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:26:50,440 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:26:50,440 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:26:50,440 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:26:50,444 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:28:00,869 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:28:00,870 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:28:00,870 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:28:00,871 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:28:00,872 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:28:00,872 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:28:00,884 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:28:03,010 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:28:03,010 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:28:03,011 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:28:03,011 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:28:03,012 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:28:03,013 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:28:03,017 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:29:10,251 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:29:10,252 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:29:10,253 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:29:10,253 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:29:10,253 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:29:10,254 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:29:10,257 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:29:28,251 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:29:28,251 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:29:28,253 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:29:28,254 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:29:28,255 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:29:28,255 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:29:28,259 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:29:28,275 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:29:28,276 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:29:28,276 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:29:28,277 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:29:28,277 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:29:28,278 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:29:28,282 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:29:28,291 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:29:28,291 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:29:28,292 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:29:28,293 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:29:28,293 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:29:28,293 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:29:28,296 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:29:28,308 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:29:28,308 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:29:28,308 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:29:28,309 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:29:28,309 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:29:28,310 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:29:28,313 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:29:36,295 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:29:36,295 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:29:36,295 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:29:36,295 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:29:36,296 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:29:36,297 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:29:36,300 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:29:38,024 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:29:38,025 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:29:38,026 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:29:38,027 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:29:38,028 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:29:38,029 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:29:38,032 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:31:33,226 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:31:33,227 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:31:33,227 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:31:33,227 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:31:33,228 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:31:33,229 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:31:33,237 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:31:33,256 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:31:33,256 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:31:33,257 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:31:33,257 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:31:33,257 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:31:33,257 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:31:33,261 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:31:33,269 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:31:33,271 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:31:33,271 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:31:33,271 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:31:33,271 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:31:33,271 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:31:33,276 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:31:33,287 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:31:33,287 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:31:33,287 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:31:33,287 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:31:33,287 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:31:33,288 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:31:33,291 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:31:33,304 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:31:33,304 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:31:33,305 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:31:33,306 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:31:33,307 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:31:33,307 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:31:33,311 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:31:33,323 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:31:33,323 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:31:33,324 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:31:33,324 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:31:33,324 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:31:33,324 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:31:33,329 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:31:33,339 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:31:33,340 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:31:33,341 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:31:33,341 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:31:33,342 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:31:33,342 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:31:33,345 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:31:46,933 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:31:46,933 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:31:46,934 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:31:46,934 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:31:46,934 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:31:46,935 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:31:46,941 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:34:01,743 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:34:01,744 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:34:01,744 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:34:01,745 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:34:01,746 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:34:01,747 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:34:01,753 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:54:08,187 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:54:08,188 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-08 12:54:08,194 - app - __init__.py- ERROR - 模块manufacturers加载失败！报错信息：No module named manufacturers
2016-06-08 12:54:08,195 - app - __init__.py- WARNING - manufacturers 模块不可用
2016-06-08 12:54:16,170 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:54:16,171 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:54:16,176 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:54:16,177 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:54:16,178 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:54:16,178 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:54:16,230 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:54:29,555 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:54:29,555 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:54:29,556 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:54:29,557 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:54:29,557 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:54:29,558 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:54:29,566 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:54:31,026 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:54:31,027 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 12:54:31,028 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 12:54:31,029 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 12:54:31,029 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 12:54:31,030 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 12:54:31,035 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 12:58:24,310 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:58:24,312 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-08 12:58:24,330 - app - __init__.py- ERROR - 模块manufacturers加载失败！报错信息：No module named manufacturers
2016-06-08 12:58:24,332 - app - __init__.py- WARNING - manufacturers 模块不可用
2016-06-08 12:58:32,090 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 12:58:32,090 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-08 12:58:32,092 - app - __init__.py- ERROR - 模块manufacturers加载失败！报错信息：No module named manufacturers
2016-06-08 12:58:32,092 - app - __init__.py- WARNING - manufacturers 模块不可用
2016-06-08 13:23:25,901 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 13:23:25,902 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 13:23:25,902 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 13:23:25,902 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 13:23:25,903 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 13:23:25,903 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 13:23:25,908 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 13:23:31,008 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 13:23:31,008 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 13:23:31,009 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 13:23:31,010 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-08 13:23:31,010 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-08 13:23:31,011 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 13:23:31,014 - app - idc.py- DEBUG - 更新id为： 5的数据成功
2016-06-08 13:23:34,386 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 13:23:34,386 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 13:23:34,387 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 13:23:34,387 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 13:23:34,387 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 13:23:34,387 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 13:23:34,391 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 13:23:35,896 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 13:23:35,897 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 13:23:35,898 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 13:23:35,898 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 13:23:35,899 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 13:23:35,900 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 13:23:35,906 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 13:23:36,624 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 13:23:36,624 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 13:23:36,624 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 13:23:36,625 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 13:23:36,626 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 13:23:36,626 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 13:23:36,629 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 13:23:37,297 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 13:23:37,297 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 13:23:37,298 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 13:23:37,298 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 13:23:37,298 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 13:23:37,300 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 13:23:37,303 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 13:23:40,186 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 13:23:40,186 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 13:23:40,186 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 13:23:40,187 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 13:23:40,187 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 13:23:40,187 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 13:23:40,195 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'id': 1}}的数据成功
2016-06-08 13:23:43,100 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 13:23:43,102 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 13:23:43,102 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 13:23:43,103 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 13:23:43,103 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 13:23:43,103 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 13:23:43,106 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 13:23:44,464 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 13:23:44,464 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 13:23:44,464 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 13:23:44,465 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 13:23:44,465 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 13:23:44,466 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 13:23:44,470 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-08 14:49:43,437 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-08 14:49:43,439 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-08 14:49:43,440 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-08 14:49:43,443 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-08 14:49:43,444 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-08 14:49:43,445 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-08 14:49:43,463 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 11:17:29,463 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:17:29,464 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:17:29,542 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:17:29,543 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 11:17:29,543 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 11:17:29,543 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:17:29,738 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 11:17:34,734 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:17:34,734 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:17:34,734 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:17:34,735 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 11:17:34,735 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 11:17:34,736 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:17:34,753 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'id': 1}}的数据成功
2016-06-12 11:17:45,584 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:17:45,584 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:17:45,584 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:17:45,585 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-12 11:17:45,585 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-12 11:17:45,586 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:17:45,595 - app - idc.py- DEBUG - 更新id为： 1的数据成功
2016-06-12 11:17:47,677 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:17:47,677 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:17:47,678 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:17:47,678 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 11:17:47,679 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 11:17:47,681 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:17:47,690 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 11:29:57,616 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:29:57,624 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:29:57,625 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:29:57,627 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 11:29:57,629 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 11:29:57,629 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:29:57,640 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 11:30:09,084 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:30:09,084 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:30:09,084 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:30:09,084 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-12 11:30:09,085 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-12 11:30:09,085 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:30:09,088 - app - idc.py- DEBUG - 更新id为： 1的数据成功
2016-06-12 11:30:37,384 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:30:37,384 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:30:37,384 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:30:37,385 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-12 11:30:37,385 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-12 11:30:37,385 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:30:37,390 - app - idc.py- DEBUG - 更新id为： 3的数据成功
2016-06-12 11:32:41,014 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:32:41,015 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:32:41,015 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:32:41,015 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 11:32:41,016 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 11:32:41,016 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:32:41,023 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 11:34:25,937 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:34:25,937 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:34:25,938 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:34:25,938 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-12 11:34:25,939 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-12 11:34:25,941 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:34:25,946 - app - idc.py- DEBUG - 新增参数为 {'user_interface': u'\u8d75\u5de5', 'name': u'bjz', 'user_phone': u'18866666666', 'idc_name': u'\u5317\u4eac\u7ad9IDC', 'rel_cabinet_num': u'10', 'phone': u'010-88886666', 'address': u'\u5317\u4eac\u7ad9\u5317\u53e3', 'pact_cabinet_num': u'30', 'email': u'kkk@reboot.com'}的数据成功
2016-06-12 11:34:27,370 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:34:27,371 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:34:27,371 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:34:27,372 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 11:34:27,374 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 11:34:27,375 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:34:27,381 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 11:35:48,988 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:35:48,992 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:35:48,994 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:35:48,995 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-12 11:35:48,995 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-12 11:35:48,996 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:35:49,003 - app - idc.py- DEBUG - 新增参数为 {'user_interface': u'\u674e\u4e8c', 'name': u'dxh', 'user_phone': u'13811111111', 'idc_name': u'\u7a3b\u9999\u6e56\u6570\u636e\u4e2d\u5fc3', 'rel_cabinet_num': u'30', 'phone': u'010-88882222', 'address': u'\u897f\u5317\u516d\u73af\u7a3b\u9999\u6e56\u57fa\u5730', 'pact_cabinet_num': u'20', 'email': u'rrr@reboot.com'}的数据成功
2016-06-12 11:35:49,902 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:35:49,903 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:35:49,904 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:35:49,904 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 11:35:49,904 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 11:35:49,904 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:35:49,908 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 11:36:15,859 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:36:15,861 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:36:15,861 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:36:15,862 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 11:36:15,863 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 11:36:15,864 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:36:15,871 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 11:36:20,004 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:36:20,007 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:36:20,008 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:36:20,009 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 11:36:20,010 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 11:36:20,011 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:36:20,015 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 11:43:09,706 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 11:43:09,706 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 11:43:09,707 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 11:43:09,707 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 11:43:09,708 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 11:43:09,708 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 11:43:09,716 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 14:53:29,401 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 14:53:29,401 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 14:53:29,401 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 14:53:29,402 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 14:53:29,402 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 14:53:29,403 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 14:53:29,411 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 15:09:53,427 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 15:09:53,428 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-12 15:09:53,430 - app - __init__.py- ERROR - 模块manufacturers加载失败！报错信息：No module named manufacturers
2016-06-12 15:09:53,431 - app - __init__.py- WARNING - manufacturers 模块不可用
2016-06-12 19:08:11,145 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:08:11,146 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:08:11,157 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 19:08:11,157 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:08:11,157 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:08:11,157 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:08:11,199 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 19:43:41,894 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:43:41,895 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:43:41,919 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 19:43:41,920 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:43:41,922 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:43:41,922 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:43:41,964 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 19:46:14,398 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:46:14,399 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:46:14,400 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 19:46:14,403 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-12 19:46:14,404 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-12 19:46:14,404 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:46:14,412 - app - idc.py- DEBUG - 新增参数为 {'user_interface': u'kch', 'name': u'hr', 'user_phone': u'13555555555', 'idc_name': u'\u6000\u67d4\u673a\u623f', 'rel_cabinet_num': u'90', 'phone': u'010-88888888', 'address': u'\u6000\u67d4\u533a**\u8def**\u53f7', 'pact_cabinet_num': u'100', 'email': u'test@51reboot.com'}的数据成功
2016-06-12 19:46:15,954 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:46:15,954 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:46:15,954 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 19:46:15,954 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:46:15,954 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:46:15,955 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:46:15,962 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 19:46:23,451 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:46:23,452 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:46:23,453 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 19:46:23,453 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:46:23,454 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:46:23,454 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:46:23,460 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'id': 1}}的数据成功
2016-06-12 19:46:27,420 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:46:27,420 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:46:27,420 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 19:46:27,421 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-12 19:46:27,422 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-12 19:46:27,422 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:46:27,427 - app - idc.py- DEBUG - 更新id为： 1的数据成功
2016-06-12 19:46:27,428 - app - __init__.py- WARNING - 调用模块执行中出错: global name 'retw' is not defined
2016-06-12 19:46:33,595 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:46:33,595 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:46:33,595 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 19:46:33,596 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:46:33,596 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:46:33,596 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:46:33,600 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 19:46:37,442 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:46:37,443 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:46:37,446 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 19:46:37,451 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:46:37,452 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:46:37,453 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:46:37,464 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'id': 1}}的数据成功
2016-06-12 19:46:41,801 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:46:41,801 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:46:41,802 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 19:46:41,804 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-12 19:46:41,804 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-12 19:46:41,805 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:46:41,815 - app - idc.py- DEBUG - 更新id为： 1的数据成功
2016-06-12 19:46:41,816 - app - __init__.py- WARNING - 调用模块执行中出错: global name 'retw' is not defined
2016-06-12 19:46:43,945 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:46:43,946 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:46:43,946 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 19:46:43,947 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:46:43,949 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:46:43,950 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:46:43,955 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 19:49:31,952 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:49:31,952 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:49:31,978 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 19:49:31,978 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:49:31,979 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:49:31,980 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:49:32,025 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 19:50:43,596 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:50:43,596 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:50:43,598 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 19:50:43,598 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-12 19:50:43,599 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-12 19:50:43,599 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:50:43,615 - app - idc.py- DEBUG - 新增参数为 {'user_interface': u'kch', 'name': u'yq', 'user_phone': u'13588888888', 'idc_name': u'\u5ef6\u5e86\u673a\u623f', 'rel_cabinet_num': u'90', 'phone': u'010-88889999', 'address': u'\u5ef6\u5e86\u533a**\u8def**\u53f7', 'pact_cabinet_num': u'100', 'email': u'test@51reboot.com'}的数据成功
2016-06-12 19:50:45,359 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:50:45,361 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:50:45,361 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 19:50:45,361 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:50:45,362 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:50:45,362 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:50:45,366 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 19:50:52,030 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:50:52,030 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:50:52,031 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 19:50:52,032 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:50:52,032 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:50:52,033 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:50:52,042 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'id': 1}}的数据成功
2016-06-12 19:50:55,741 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:50:55,741 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:50:55,741 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 19:50:55,742 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-12 19:50:55,742 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-12 19:50:55,743 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:50:55,748 - app - idc.py- DEBUG - 更新id为： 1的数据成功
2016-06-12 19:50:57,501 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:50:57,502 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:50:57,502 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 19:50:57,503 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:50:57,503 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:50:57,503 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:50:57,509 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 19:53:51,975 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:53:51,976 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:53:51,977 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 19:53:51,978 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:53:51,979 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:53:51,980 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:53:51,988 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 19:55:56,879 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:55:56,879 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:55:56,879 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 19:55:56,881 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:55:56,882 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:55:56,883 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:55:56,889 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 19:57:20,010 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:57:20,012 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:57:20,013 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 19:57:20,014 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:57:20,014 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:57:20,015 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:57:20,020 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 19:57:31,956 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:57:31,956 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:57:31,957 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-12 19:57:31,957 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-12 19:57:31,957 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-12 19:57:31,957 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:57:31,960 - app - idc.py- DEBUG - 更新id为： 1的数据成功
2016-06-12 19:58:32,139 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 19:58:32,139 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 19:58:32,147 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 19:58:32,148 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 19:58:32,148 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 19:58:32,148 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 19:58:32,180 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 20:00:38,622 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 20:00:38,623 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 20:00:38,623 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 20:00:38,625 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-12 20:00:38,626 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-12 20:00:38,628 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 20:00:38,635 - app - idc.py- DEBUG - 新增参数为 {'user_interface': u'kch', 'name': u'yj', 'user_phone': u'13811111111', 'idc_name': u'\u71d5\u90ca\u673a\u623f', 'rel_cabinet_num': u'50', 'phone': u'010-88889999', 'address': u'\u71d5\u987a\u8def\u4e2d\u5174\u56ed\u533a', 'pact_cabinet_num': u'80', 'email': u'tt@51reboot.com'}的数据成功
2016-06-12 20:00:40,832 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 20:00:40,833 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 20:00:40,833 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 20:00:40,834 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 20:00:40,835 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 20:00:40,835 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 20:00:40,849 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 20:00:48,795 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 20:00:48,796 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 20:00:48,797 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 20:00:48,797 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 20:00:48,798 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 20:00:48,799 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 20:00:48,808 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'id': 10}}的数据成功
2016-06-12 20:00:53,842 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 20:00:53,843 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 20:00:53,844 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 20:00:53,844 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-12 20:00:53,845 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-12 20:00:53,847 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 20:00:53,855 - app - idc.py- DEBUG - 更新id为： 10的数据成功
2016-06-12 20:00:55,434 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 20:00:55,434 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 20:00:55,435 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 20:00:55,435 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-12 20:00:55,436 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-12 20:00:55,437 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 20:00:55,446 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-12 20:01:06,637 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-12 20:01:06,637 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-12 20:01:06,638 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-12 20:01:06,638 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-12 20:01:06,639 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-12 20:01:06,641 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-12 20:01:06,646 - app - idc.py- DEBUG - 更新id为： 5的数据成功
2016-06-13 10:37:19,055 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 10:37:19,065 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-13 10:37:19,080 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-13 10:37:19,080 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-13 10:37:19,080 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-13 10:37:19,080 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-13 10:37:19,329 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-13 10:37:25,606 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 10:37:25,606 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-13 10:37:25,608 - app - __init__.py- ERROR - 模块manufacturers加载失败！报错信息：No module named manufacturers
2016-06-13 10:37:25,608 - app - __init__.py- WARNING - manufacturers 模块不可用
2016-06-13 10:41:09,029 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 10:41:09,030 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-13 10:41:09,034 - app - __init__.py- ERROR - 模块manufacturers加载失败！报错信息：No module named manufacturers
2016-06-13 10:41:09,034 - app - __init__.py- WARNING - manufacturers 模块不可用
2016-06-13 10:43:44,723 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 10:43:44,723 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-13 10:43:44,725 - app - __init__.py- ERROR - 模块manufacturers加载失败！报错信息：No module named manufacturers
2016-06-13 10:43:44,725 - app - __init__.py- WARNING - manufacturers 模块不可用
2016-06-13 10:43:45,639 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 10:43:45,639 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-13 10:43:45,645 - app - __init__.py- ERROR - 模块manufacturers加载失败！报错信息：No module named manufacturers
2016-06-13 10:43:45,645 - app - __init__.py- WARNING - manufacturers 模块不可用
2016-06-13 10:43:46,393 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 10:43:46,394 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-13 10:43:46,395 - app - __init__.py- ERROR - 模块manufacturers加载失败！报错信息：No module named manufacturers
2016-06-13 10:43:46,396 - app - __init__.py- WARNING - manufacturers 模块不可用
2016-06-13 10:43:47,057 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 10:43:47,057 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-13 10:43:47,059 - app - __init__.py- ERROR - 模块manufacturers加载失败！报错信息：No module named manufacturers
2016-06-13 10:43:47,059 - app - __init__.py- WARNING - manufacturers 模块不可用
2016-06-13 14:24:42,418 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 14:24:42,419 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-13 14:24:42,422 - app - __init__.py- ERROR - 模块manufacturers加载失败！报错信息：No module named manufacturers
2016-06-13 14:24:42,423 - app - __init__.py- WARNING - manufacturers 模块不可用
2016-06-13 14:24:43,817 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 14:24:43,817 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-13 14:24:43,819 - app - __init__.py- ERROR - 模块manufacturers加载失败！报错信息：No module named manufacturers
2016-06-13 14:24:43,819 - app - __init__.py- WARNING - manufacturers 模块不可用
2016-06-13 14:25:23,225 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 14:25:23,226 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-13 14:25:23,232 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.py'>！
2016-06-13 14:25:23,232 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-13 14:25:23,233 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-13 14:25:23,233 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-13 14:25:23,237 - app - manufacturers.py- DEBUG - 查询参数为 {}的数据成功
2016-06-13 14:25:36,274 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 14:25:36,274 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-13 14:25:36,275 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.py'>！
2016-06-13 14:25:36,275 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-13 14:25:36,275 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-13 14:25:36,275 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-13 14:25:36,281 - app - manufacturers.py- DEBUG - 查询参数为 {}的数据成功
2016-06-13 16:01:18,272 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 16:01:18,273 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-13 16:01:18,302 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.py'>！
2016-06-13 16:01:18,303 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-13 16:01:18,303 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-13 16:01:18,303 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-13 16:01:18,336 - app - manufacturers.py- DEBUG - 查询参数为 {}的数据成功
2016-06-13 16:02:59,427 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 16:02:59,429 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-13 16:02:59,448 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.pyc'>！
2016-06-13 16:02:59,448 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-13 16:02:59,448 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-13 16:02:59,449 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-13 16:02:59,493 - app - manufacturers.py- DEBUG - 查询参数为 {}的数据成功
2016-06-13 16:04:55,709 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 16:04:55,710 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-13 16:04:55,714 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-13 16:04:55,715 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-13 16:04:55,716 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-13 16:04:55,716 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-13 16:04:55,725 - app - idc.py- DEBUG - 查询参数为 {u'output': [u'name', u'id']}的数据成功
2016-06-13 16:04:55,727 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-13 16:04:55,728 - app - __init__.py- DEBUG - 验证模块power是否存在;
2016-06-13 16:04:55,731 - app - __init__.py- ERROR - 模块power加载失败！报错信息：No module named power
2016-06-13 16:04:55,732 - app - __init__.py- WARNING - power 模块不可用
2016-06-14 08:56:53,954 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 08:56:53,954 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 08:56:53,955 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-14 08:56:53,956 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-14 08:56:53,956 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-14 08:56:53,958 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 08:56:53,964 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-14 08:56:57,227 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 08:56:57,227 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 08:56:57,227 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-14 08:56:57,228 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-14 08:56:57,229 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-14 08:56:57,230 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 08:56:57,236 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'id': 10}}的数据成功
2016-06-14 08:57:20,429 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 08:57:20,430 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-14 08:57:20,431 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.pyc'>！
2016-06-14 08:57:20,432 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-14 08:57:20,433 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-14 08:57:20,434 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 08:57:20,438 - app - manufacturers.py- DEBUG - 查询参数为 {}的数据成功
2016-06-14 09:06:09,711 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 09:06:09,712 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-14 09:06:09,713 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.pyc'>！
2016-06-14 09:06:09,713 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数create;
2016-06-14 09:06:09,714 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数create成功;
2016-06-14 09:06:09,714 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 09:06:09,721 - app - manufacturers.py- DEBUG - 新增参数为 {'name': u'\u8054\u60f3'}的数据成功
2016-06-14 09:06:16,875 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 09:06:16,875 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-14 09:06:16,876 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.pyc'>！
2016-06-14 09:06:16,879 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-14 09:06:16,880 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-14 09:06:16,880 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 09:06:16,889 - app - manufacturers.py- DEBUG - 查询参数为 {}的数据成功
2016-06-14 09:06:30,842 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 09:06:30,843 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-14 09:06:30,844 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.pyc'>！
2016-06-14 09:06:30,845 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数create;
2016-06-14 09:06:30,845 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数create成功;
2016-06-14 09:06:30,846 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 09:06:30,855 - app - manufacturers.py- DEBUG - 新增参数为 {'name': u'\u6d6a\u6f6e'}的数据成功
2016-06-14 09:06:37,990 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 09:06:37,990 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-14 09:06:37,992 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.pyc'>！
2016-06-14 09:06:37,992 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-14 09:06:37,994 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-14 09:06:37,995 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 09:06:37,999 - app - manufacturers.py- DEBUG - 查询参数为 {}的数据成功
2016-06-14 09:07:02,332 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 09:07:02,332 - app - __init__.py- DEBUG - 验证模块status是否存在;
2016-06-14 09:07:02,335 - app - __init__.py- ERROR - 模块status加载失败！报错信息：No module named status
2016-06-14 09:07:02,336 - app - __init__.py- WARNING - status 模块不可用
2016-06-14 09:09:23,948 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 09:09:23,948 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 09:09:23,949 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-14 09:09:23,949 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-14 09:09:23,949 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-14 09:09:23,950 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 09:09:23,957 - app - idc.py- DEBUG - 查询参数为 {u'where': {u'status': 1}}的数据成功
2016-06-14 10:00:57,555 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 10:00:57,556 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 10:00:57,575 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-14 10:00:57,575 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-14 10:00:57,575 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-14 10:00:57,576 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 10:01:00,856 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 10:01:00,857 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 10:01:00,857 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-14 10:01:00,858 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-14 10:01:00,860 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-14 10:01:00,860 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 10:02:10,255 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 10:02:10,257 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 10:02:10,257 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-14 10:02:10,257 - app - __init__.py- DEBUG - 验证模块idc是否有此函数create;
2016-06-14 10:02:10,258 - app - __init__.py- DEBUG - 当前模块idc查找函数create成功;
2016-06-14 10:02:10,258 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 10:02:11,389 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 10:02:11,390 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 10:02:11,393 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-14 10:02:11,394 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-14 10:02:11,395 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-14 10:02:11,396 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 10:02:14,969 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 10:02:14,970 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 10:02:14,970 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-14 10:02:14,970 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-14 10:02:14,971 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-14 10:02:14,972 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 10:02:20,031 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 10:02:20,034 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 10:02:20,035 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-14 10:02:20,036 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-14 10:02:20,036 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-14 10:02:20,040 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 10:02:22,149 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 10:02:22,151 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 10:02:22,151 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-14 10:02:22,153 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-14 10:02:22,155 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-14 10:02:22,156 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 10:02:28,466 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 10:02:28,467 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 10:02:28,467 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.py'>！
2016-06-14 10:02:28,467 - app - __init__.py- DEBUG - 验证模块idc是否有此函数update;
2016-06-14 10:02:28,467 - app - __init__.py- DEBUG - 当前模块idc查找函数update成功;
2016-06-14 10:02:28,468 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 10:03:50,610 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 10:03:50,610 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-14 10:03:50,623 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.py'>！
2016-06-14 10:03:50,623 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-14 10:03:50,623 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-14 10:03:50,624 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 10:04:01,073 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 10:04:01,074 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-14 10:04:01,074 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.py'>！
2016-06-14 10:04:01,075 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数create;
2016-06-14 10:04:01,076 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数create成功;
2016-06-14 10:04:01,076 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 10:04:04,991 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 10:04:04,992 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-14 10:04:04,992 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.py'>！
2016-06-14 10:04:04,992 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-14 10:04:04,993 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-14 10:04:04,995 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 19:48:33,345 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 19:48:33,346 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 19:48:33,354 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-14 19:48:33,355 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-14 19:48:33,355 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-14 19:48:33,355 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 19:48:40,007 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 19:48:40,008 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-14 19:48:40,015 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.py'>！
2016-06-14 19:48:40,016 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-14 19:48:40,016 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-14 19:48:40,017 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 19:48:49,738 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 19:48:49,738 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 19:48:49,738 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-14 19:48:49,739 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-14 19:48:49,740 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-14 19:48:49,741 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 20:45:32,137 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 20:45:32,137 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 20:45:32,137 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-14 20:45:32,138 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-14 20:45:32,139 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-14 20:45:32,139 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 20:45:54,113 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 20:45:54,113 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-14 20:45:54,113 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.py'>！
2016-06-14 20:45:54,113 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-14 20:45:54,114 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-14 20:45:54,116 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 20:46:34,990 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 20:46:34,990 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-14 20:46:34,990 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.py'>！
2016-06-14 20:46:34,991 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-14 20:46:34,991 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-14 20:46:34,992 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 20:48:17,262 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 20:48:17,262 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-14 20:48:17,274 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.pyc'>！
2016-06-14 20:48:17,274 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-14 20:48:17,275 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-14 20:48:17,276 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 20:48:26,140 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 20:48:26,140 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 20:48:26,145 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-14 20:48:26,145 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-14 20:48:26,146 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-14 20:48:26,147 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 20:48:38,625 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 20:48:38,626 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-14 20:48:38,626 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.pyc'>！
2016-06-14 20:48:38,627 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-14 20:48:38,627 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-14 20:48:38,627 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 20:48:46,417 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 20:48:46,417 - app - __init__.py- DEBUG - 验证模块idc是否存在;
2016-06-14 20:48:46,418 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.idc' from '/vagrant/modules/idc.pyc'>！
2016-06-14 20:48:46,418 - app - __init__.py- DEBUG - 验证模块idc是否有此函数get;
2016-06-14 20:48:46,419 - app - __init__.py- DEBUG - 当前模块idc查找函数get成功;
2016-06-14 20:48:46,420 - app - __init__.py- DEBUG - 获取可执行的函数
2016-06-14 20:48:51,522 - app - __init__.py- DEBUG - 初始化：LazyImport类！
2016-06-14 20:48:51,522 - app - __init__.py- DEBUG - 验证模块manufacturers是否存在;
2016-06-14 20:48:51,523 - app - __init__.py- DEBUG - 当前延迟加载的类为：<module 'modules.manufacturers' from '/vagrant/modules/manufacturers.pyc'>！
2016-06-14 20:48:51,524 - app - __init__.py- DEBUG - 验证模块manufacturers是否有此函数get;
2016-06-14 20:48:51,525 - app - __init__.py- DEBUG - 当前模块manufacturers查找函数get成功;
2016-06-14 20:48:51,526 - app - __init__.py- DEBUG - 获取可执行的函数
